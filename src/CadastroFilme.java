/*
 * using dbDesign9
 */

import com.toedter.calendar.JTextFieldDateEditor;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Locale;
import java.util.Vector;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

public class CadastroFilme extends javax.swing.JFrame {

    private Connection conn;
    private Statement stmt;
    private PreparedStatement prepStmt;
    private ResultSet rs;

    /**
     * Vector is deprecated, but DefaultComboBoxModel uses it internally, and DefaultComboBoxModel
     * is recommended to be used in this situation, so there's no point in using something else here
     * because DefaultComboBoxModel will implement it as a Vector internally.
     */
    private Vector comboBoxCategoriaDePrecoDataList;
    private AutoComboBox comboBoxCategoriaDePreco;
    private Vector comboBoxCategoriaDeFilmeDataList;
    private AutoComboBox comboBoxCategoriaDeFilme;

    private DefaultListModel listCategoriasDeFilmeModel;

    public CadastroFilme() {
        comboBoxCategoriaDePrecoDataList = new Vector();
        comboBoxCategoriaDePreco = new AutoComboBox(comboBoxCategoriaDePrecoDataList);
        comboBoxCategoriaDeFilmeDataList = new Vector();
        comboBoxCategoriaDeFilme = new AutoComboBox(comboBoxCategoriaDeFilmeDataList);

        initComponents();

        listCategoriasDeFilmeModel = new DefaultListModel();
        listCategoriasDeFilme.setModel(listCategoriasDeFilmeModel);

        //it already does the DD/MM/YYYY
        dateChooserDataDaAcquisicao.setLocale(new Locale("pt", "BR"));

        ((JTextFieldDateEditor) dateChooserDataDaAcquisicao.getDateEditor()).setEditable(false);

        try {
            conn = DriverManager.getConnection("jdbc:sqlite:local/designedDb.db");
            stmt = conn.createStatement();
            stmt.setQueryTimeout(30);
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }

        //populate comboBoxCategoriaDeFilme
        comboBoxCategoriaDeFilmeDataList.add(new MovieCategoryTable()); //insert the first empty string
        try {
            prepStmt = conn.prepareStatement("SELECT *"
                    + " FROM TB_MOVIE_CATEGORY"
                    + " WHERE MOV_CAT_ACTIVE = ?" //1
                    + " ORDER BY MOV_CAT_DESCRIPTION");
            prepStmt.setInt(1, 1);
            rs = prepStmt.executeQuery();

            while (rs.next()) {
                comboBoxCategoriaDeFilmeDataList.add(new MovieCategoryTable(
                        rs.getInt("MOV_CAT_ID"),
                        rs.getString("MOV_CAT_DESCRIPTION"),
                        rs.getString("MOV_CAT_NOTES"),
                        rs.getInt("MOV_CAT_ACTIVE"),
                        true //because they will only be used as new categories in the list
                ));
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        comboBoxCategoriaDeFilme.setDataList(comboBoxCategoriaDeFilmeDataList);

        //populate comboBoxCategoriaDePreco
        comboBoxCategoriaDePrecoDataList.add(new PriceCategoryTable()); //insert the first empty string
        try {
            prepStmt = conn.prepareStatement("SELECT *"
                    + " FROM TB_PRICE_CATEGORY"
                    + " WHERE PRI_CAT_ACTIVE = ?" //1
                    + " ORDER BY PRI_CAT_DESCRIPTION");
            prepStmt.setInt(1, 1);
            rs = prepStmt.executeQuery();

            while (rs.next()) {
                comboBoxCategoriaDePrecoDataList.add(new PriceCategoryTable(
                        rs.getInt("PRI_CAT_ID"),
                        rs.getString("PRI_CAT_DESCRIPTION"),
                        rs.getString("PRI_CAT_NOTES"),
                        rs.getInt("PRI_CAT_AMOUNT_OF_MOVIES_USING"),
                        rs.getInt("PRI_CAT_ACTIVE"),
                        rs.getLong("PRI_CAT_FINE_PRICE"),
                        rs.getInt("PRI_CAT_MULTIPLY_BY")
                ));
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        comboBoxCategoriaDePreco.setDataList(comboBoxCategoriaDePrecoDataList);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator3 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jScrollPane4 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        buttonFinalizarCadastro = new javax.swing.JButton();
        titleLabel = new javax.swing.JLabel();
        labelNome = new javax.swing.JLabel();
        labelTipoDeMidia = new javax.swing.JLabel();
        labelDescricao = new javax.swing.JLabel();
        labelFilmeDanificado = new javax.swing.JLabel();
        textFieldNome = new javax.swing.JTextField();
        textFieldTipoDeMidia = new javax.swing.JTextField();
        labelAnotacoes = new javax.swing.JLabel();
        textFieldAnoDeLancamento = new javax.swing.JTextField();
        labelAnoDeLancamento = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaAnotacoes = new javax.swing.JTextArea();
        labelDataDaAcquisicao = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        textAreaDescricao = new javax.swing.JTextArea();
        checkBoxFilmeDanificado = new javax.swing.JCheckBox();
        labelCategoriaDePreco = new javax.swing.JLabel();
        comboBoxCategoriaDePreco = new AutoComboBox(comboBoxCategoriaDePrecoDataList);
        labelCategoriasDeFilme = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listCategoriasDeFilme = new javax.swing.JList<>();
        labelCategoriaDeFilme = new javax.swing.JLabel();
        comboBoxCategoriaDeFilme = new AutoComboBox(comboBoxCategoriaDeFilmeDataList);
        buttonAdicionarCategoriaNaLista = new javax.swing.JButton();
        buttonRemoverCategoriaDaLista = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        buttonCancelarCadastro = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator7 = new javax.swing.JSeparator();
        dateChooserDataDaAcquisicao = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jScrollPane4.setPreferredSize(new java.awt.Dimension(817, 679));

        jPanel1.setPreferredSize(new java.awt.Dimension(814, 863));

        buttonFinalizarCadastro.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        buttonFinalizarCadastro.setText("Finalizar Cadastro");
        buttonFinalizarCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonFinalizarCadastroActionPerformed(evt);
            }
        });

        titleLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        titleLabel.setText("Cadastrar Filme ( Cada Cópia )");

        labelNome.setText("* Nome :");

        labelTipoDeMidia.setText("* Tipo De Mídia :");

        labelDescricao.setText("Descrição :");

        labelFilmeDanificado.setText("Filme Danificado :");

        labelAnotacoes.setText("Anotações :");

        labelAnoDeLancamento.setText("Ano de Lançamento :");

        textAreaAnotacoes.setColumns(20);
        textAreaAnotacoes.setRows(5);
        jScrollPane1.setViewportView(textAreaAnotacoes);

        labelDataDaAcquisicao.setText("* Data da Acquisição :");

        textAreaDescricao.setColumns(20);
        textAreaDescricao.setRows(5);
        jScrollPane2.setViewportView(textAreaDescricao);

        labelCategoriaDePreco.setText("* Categoria de Preço :");

        comboBoxCategoriaDePreco.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboBoxCategoriaDePreco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxCategoriaDePrecoActionPerformed(evt);
            }
        });

        labelCategoriasDeFilme.setText("Categorias de Filme :");

        listCategoriasDeFilme.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(listCategoriasDeFilme);

        labelCategoriaDeFilme.setText("Categoria de Filme :");

        comboBoxCategoriaDeFilme.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboBoxCategoriaDeFilme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxCategoriaDeFilmeActionPerformed(evt);
            }
        });

        buttonAdicionarCategoriaNaLista.setText("Adicionar Categoria na Lista");
        buttonAdicionarCategoriaNaLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAdicionarCategoriaNaListaActionPerformed(evt);
            }
        });

        buttonRemoverCategoriaDaLista.setText("Remover Categoria da Lista");
        buttonRemoverCategoriaDaLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRemoverCategoriaDaListaActionPerformed(evt);
            }
        });

        buttonCancelarCadastro.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        buttonCancelarCadastro.setText("Cancelar Cadastro");
        buttonCancelarCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelarCadastroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(labelFilmeDanificado)
                        .addGap(8, 8, 8)
                        .addComponent(checkBoxFilmeDanificado)
                        .addGap(523, 648, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(titleLabel)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator7, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator2)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(buttonRemoverCategoriaDaLista)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(buttonAdicionarCategoriaNaLista))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(labelCategoriasDeFilme)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane3))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(labelDataDaAcquisicao)
                                .addGap(12, 12, 12)
                                .addComponent(dateChooserDataDaAcquisicao, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(labelAnoDeLancamento)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textFieldAnoDeLancamento))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(labelTipoDeMidia)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textFieldTipoDeMidia))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(labelNome)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textFieldNome))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(labelAnotacoes)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(labelCategoriaDeFilme)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(comboBoxCategoriaDeFilme, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(labelCategoriaDePreco)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboBoxCategoriaDePreco, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(labelDescricao)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2)))
                        .addContainerGap())))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonCancelarCadastro)
                .addGap(40, 40, 40)
                .addComponent(buttonFinalizarCadastro)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNome)
                    .addComponent(textFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelDataDaAcquisicao)
                    .addComponent(dateChooserDataDaAcquisicao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelAnoDeLancamento)
                    .addComponent(textFieldAnoDeLancamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldTipoDeMidia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelTipoDeMidia))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelDescricao)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelFilmeDanificado)
                    .addComponent(checkBoxFilmeDanificado))
                .addGap(12, 12, 12)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelCategoriasDeFilme)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelCategoriaDeFilme)
                    .addComponent(comboBoxCategoriaDeFilme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonAdicionarCategoriaNaLista)
                    .addComponent(buttonRemoverCategoriaDaLista))
                .addGap(10, 10, 10)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelAnotacoes)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCategoriaDePreco)
                    .addComponent(comboBoxCategoriaDePreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonFinalizarCadastro)
                    .addComponent(buttonCancelarCadastro))
                .addContainerGap())
        );

        jScrollPane4.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 820, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 837, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonCancelarCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelarCadastroActionPerformed
        dispose();
    }//GEN-LAST:event_buttonCancelarCadastroActionPerformed

    private void buttonRemoverCategoriaDaListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRemoverCategoriaDaListaActionPerformed
        int selectedIndex = listCategoriasDeFilme.getSelectedIndex();

        if (selectedIndex == -1) {

            JOptionPane.showMessageDialog(
                    null,
                    "Antes de clicar em \"Remover Categoria\", favor selecionar uma categoria para remover.",
                    "Aviso",
                    JOptionPane.WARNING_MESSAGE
            );

        } else if (JOptionPane.showOptionDialog(
                null,
                "Tem certeza que deseja remover esta categoria da lista?",
                "Confirmar",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                new String[]{"Sim", "Não"},
                "Sim") == JOptionPane.YES_OPTION) {

            listCategoriasDeFilmeModel.remove(selectedIndex);
        }
    }//GEN-LAST:event_buttonRemoverCategoriaDaListaActionPerformed

    private void buttonAdicionarCategoriaNaListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAdicionarCategoriaNaListaActionPerformed
        comboBoxCategoriaDeFilmeActionPerformed(evt); //to make sure it's selected

        MovieCategoryTable selectedMovieCategory = (MovieCategoryTable) comboBoxCategoriaDeFilme.getSelectedItem();

        if (selectedMovieCategory.isEmptyString()) {

            JOptionPane.showMessageDialog(
                    null,
                    "Antes de clicar em \"Adicionar Categoria\", favor selecionar uma categoria para adicionar.",
                    "Aviso",
                    JOptionPane.WARNING_MESSAGE
            );

        } else if (listCategoriasDeFilmeModel.contains(selectedMovieCategory)) {

            JOptionPane.showMessageDialog(
                    null,
                    "Esta categoria já está na lista!",
                    "Aviso",
                    JOptionPane.WARNING_MESSAGE
            );

        } else {
            listCategoriasDeFilmeModel.addElement(selectedMovieCategory);
        }
    }//GEN-LAST:event_buttonAdicionarCategoriaNaListaActionPerformed

    private void comboBoxCategoriaDeFilmeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxCategoriaDeFilmeActionPerformed
        //this was intentional, to make sure it's selected.
    }//GEN-LAST:event_comboBoxCategoriaDeFilmeActionPerformed

    private void comboBoxCategoriaDePrecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxCategoriaDePrecoActionPerformed
        //this was intentional, to make sure it's selected.
    }//GEN-LAST:event_comboBoxCategoriaDePrecoActionPerformed

    private void buttonFinalizarCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonFinalizarCadastroActionPerformed
        comboBoxCategoriaDePrecoActionPerformed(evt); //to make sure it's selected
        
        PriceCategoryTable selectedPriceCategory = (PriceCategoryTable) comboBoxCategoriaDePreco.getSelectedItem();

        trimMandatoryFields();

        if (textFieldNome.getText().isEmpty()
                || textFieldTipoDeMidia.getText().isEmpty()
                || selectedPriceCategory.isEmptyString()) {

            JOptionPane.showMessageDialog(
                    null,
                    "ERRO!\nOs campos * são obrigatórios!",
                    "Aviso",
                    JOptionPane.WARNING_MESSAGE
            );

        } else if (JOptionPane.showOptionDialog(
                null,
                "Tem certeza que deseja finalizar?",
                "Confirmar",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                new String[]{"Sim", "Não"},
                "Sim") == JOptionPane.YES_OPTION) {

            try {
                prepStmt = conn.prepareStatement("INSERT INTO TB_MOVIE("
                        + "MOV_NAME," //1
                        + "MOV_YEAR_OF_RELEASE," //2
                        + "MOV_DATE_OF_ACQUISITION," //3
                        + "MOV_DESCRIPTION," //4
                        + "MOV_NOTES," //5
                        + "MOV_KIND_OF_MEDIA," //6
                        + "MOV_DAMAGED," //7
                        + "MOV_TB_PRICE_CATEGORY_ID" //8
                        + ") VALUES(?,?,?,?,?,?,?,?)");
                prepStmt.setString(1, textFieldNome.getText());
                prepStmt.setString(2, textFieldAnoDeLancamento.getText());
                prepStmt.setLong(3, dateChooserDataDaAcquisicao.getDate().getTime());
                prepStmt.setString(4, textAreaDescricao.getText());
                prepStmt.setString(5, textAreaAnotacoes.getText());
                prepStmt.setString(6, textFieldTipoDeMidia.getText());
                prepStmt.setInt(7, checkBoxFilmeDanificado.isSelected() ? 1 : 0);
                prepStmt.setInt(8, selectedPriceCategory.getId());
                prepStmt.executeUpdate();

                int movieID = stmt.executeQuery("SELECT last_insert_rowid()").getInt("last_insert_rowid()");

                //insert each new movie category for the movie
                for (int i = 0; i < listCategoriasDeFilmeModel.getSize(); i++) {
                    MovieCategoryTable currentCategory = (MovieCategoryTable) listCategoriasDeFilmeModel.getElementAt(i);

                    prepStmt = conn.prepareStatement("INSERT INTO TB_MOVIE_CATEGORY_MOVIE("
                            + "MOV_CAT_MOV_TB_MOVIE_ID," //1
                            + "MOV_CAT_MOV_TB_MOVIE_CATEGORY_ID" //2
                            + ") VALUES(?,?)");
                    prepStmt.setInt(1, movieID);
                    prepStmt.setInt(2, currentCategory.getId());
                    prepStmt.executeUpdate();
                }

                JOptionPane.showMessageDialog(null, "Cadastro do filme bem sucedido.");
                new GerenciadorDeEmprestimosDeFilmes().setVisible(true);
                super.dispose();

            } catch (SQLException e) {
                System.out.println(e.getMessage());
            } finally {
                try {
                    if (conn != null) {
                        conn.close();
                    }
                } catch (Exception e) {
                    System.out.println(e.getMessage());
                }
            }
        }
    }//GEN-LAST:event_buttonFinalizarCadastroActionPerformed

    /**
     * trimming the fields that are mandatory\obligatory, meaning the fields that have an "*"
     * preceding their label.
     */
    private void trimMandatoryFields() {
        textFieldNome.setText(textFieldNome.getText().trim());
        textFieldTipoDeMidia.setText(textFieldTipoDeMidia.getText().trim());
    }

    /**
     * custom dispose() to ask if the user is sure, close the DB connection and call the main GUI
     * again.
     */
    @Override
    public void dispose() {
        if (JOptionPane.showOptionDialog(
                null,
                "Tem certeza que deseja sair?",
                "Confirmar",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                new String[]{"Sim", "Não"},
                "Sim") == JOptionPane.YES_OPTION) {

            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (Exception e) {
                System.out.println(e.getMessage());
            }

            new GerenciadorDeEmprestimosDeFilmes().setVisible(true);
            super.dispose();
        }
    }

    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default look and
         * feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroFilme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroFilme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroFilme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroFilme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroFilme().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAdicionarCategoriaNaLista;
    private javax.swing.JButton buttonCancelarCadastro;
    private javax.swing.JButton buttonFinalizarCadastro;
    private javax.swing.JButton buttonRemoverCategoriaDaLista;
    private javax.swing.JCheckBox checkBoxFilmeDanificado;
//    private javax.swing.JComboBox comboBoxCategoriaDeFilme;
  //  private javax.swing.JComboBox comboBoxCategoriaDePreco;
    private com.toedter.calendar.JDateChooser dateChooserDataDaAcquisicao;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JLabel labelAnoDeLancamento;
    private javax.swing.JLabel labelAnotacoes;
    private javax.swing.JLabel labelCategoriaDeFilme;
    private javax.swing.JLabel labelCategoriaDePreco;
    private javax.swing.JLabel labelCategoriasDeFilme;
    private javax.swing.JLabel labelDataDaAcquisicao;
    private javax.swing.JLabel labelDescricao;
    private javax.swing.JLabel labelFilmeDanificado;
    private javax.swing.JLabel labelNome;
    private javax.swing.JLabel labelTipoDeMidia;
    private javax.swing.JList<String> listCategoriasDeFilme;
    private javax.swing.JTextArea textAreaAnotacoes;
    private javax.swing.JTextArea textAreaDescricao;
    private javax.swing.JTextField textFieldAnoDeLancamento;
    private javax.swing.JTextField textFieldNome;
    private javax.swing.JTextField textFieldTipoDeMidia;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
